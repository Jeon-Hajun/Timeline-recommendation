입력값 : 기존 시간표 과목 4개 3학점. & 3학점 과목 800개.

# 0차 메모리 계산

시간표 저장한 배열로 인한 고정 공간들 / 비교를 위해 생성되는 임시 공간들

고정 공간들
schedule 배열 5일 : 5개 * 4바이트 = 20바이트
string 변환(string 데이터 : 문자열 + 오버헤드) : 5*10 바이트 = 50바이트
과목 4개 -> 70바이트 * 4 = 280 바이트

임시 공간들

비교를 위해 만들어 지는 배열 
 - schedule 배열 (위와 같음) = 20바이트
 - 요일별 string (3학점이니 최대 3교시 - 1,2,3 문자열 5개 ) : 5 * 2바이트 = 10바이트  * 5일 = 50바이트
 20 + 50 = 70 바이트
 배열 기존과 신규 2개 이므로  2 * 70 = 140 바이트

split 연산으로 생성되는 배열 : newTimes와 existingTimes 각각 3개 요소 * 4바이트 = 12 바이트
  2개 이므로 24바이트
기타  변수들 (오버헤드 등) : 20바이트
임시 총 140 + 24 + 20 = 184 바이트

0차 메모리 총 : 280 + 184 = 464 바이트

# 1차 메모리 계산

고정 공간 / 임시 공간

고정 공간

timeGrid (boolean 배열) : 5일 15교시 = 75 바이트
  배열 오버헤드 : 16바이트 
고정 총 : 75 + 16 = 91 바이트

임시 공간

schedule 배열 : 5일 * 4바이트(배열 당) = 20바이트
times 배열 (3학점이니 최대 3교시) : 3 * 4바이트 = 12바이트 
기타 변수들 (day, period등) : 8바이트   

임시 총 : 40 바이트

1차 메모리 총 : 91 + 40 = 131 바이트

